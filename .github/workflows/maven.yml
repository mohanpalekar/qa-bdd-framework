name: CI – Build, Test, Coverage, Sonar, Publish

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Cucumber tags to run (e.g. @smoke)'
        default: '@smoke'
      threadCount:
        description: 'Thread count for parallel tests'
        default: '2'
      parallel:
        description: 'Parallel mode (methods/classes/scenarios)'
        default: 'methods'
      env:
        description: 'Environment (dev/qa/prod)'
        default: 'sit'
      runnerLabel:
        description: 'Optional self-hosted runner label (runner-1, runner-2…)'
        default: 'runner-1'

permissions:
  contents: read
  pages: write       # Grants the action permission to create a Pages deployment
  id-token: write    # Grants the action permission to fetch the necessary OIDC token

jobs:
  tests:
    runs-on: ${{ fromJSON(inputs.runnerLabel != '' && format('["self-hosted", "{0}"]', inputs.runnerLabel) || '["self-hosted"]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # ⚠️ CHANGES START HERE
      - name: Build & Test
        shell: powershell
        env:
          CUCUMBER_TAGS: ${{ inputs.tags }}
          THREAD_COUNT: ${{ inputs.threadCount }}
          PARALLEL_MODE: ${{ inputs.parallel }}
          TEST_ENV: ${{ inputs.env }}
        run: |
          echo "Running tests with:"
          echo "Tags: ${{ env.CUCUMBER_TAGS }}"
          echo "Thread count: ${{ env.THREAD_COUNT }}"
          echo "Parallel: ${{ env.PARALLEL_MODE }}"
          echo "Env: ${{ env.TEST_ENV }}"
          # The 'mvn' command that runs the tests and generates the report
          # It is assumed that this command places the 'index.html' and 'json-files'
          # into a directory named 'dashboard' at the root of the repository.
          mvn -B clean verify `
            "-Dcucumber.filter.tags=${{ env.CUCUMBER_TAGS }}" `
            "-DthreadCount=${{ env.THREAD_COUNT }}" `
            "-Dparallel=${{ env.PARALLEL_MODE }}" `
            "-Denv=${{ env.TEST_ENV }}"

      # Upload the entire 'dashboard' folder as an artifact.
      - name: Upload Dynamic Report
        uses: actions/upload-artifact@v4
        with:
          name: dynamic-report
          path: dashboard

  publish:
    # Set the environment and URL for tracking the deployment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ${{ fromJSON(inputs.runnerLabel != '' && format('["self-hosted", "{0}"]', inputs.runnerLabel) || '["self-hosted"]') }}
    needs: tests

    # Required to ensure only one deployment is running at a time
    concurrency:
      group: "pages"
      cancel-in-progress: true

    steps:
      # 1. Download the report artifact from the 'tests' job
      - name: Download Dynamic Report
        uses: actions/download-artifact@v4
        with:
          name: dynamic-report
          path: dynamic-report

      # 2. Configure the Pages environment
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 3. Upload the report as the deployable artifact
      - name: Upload Report Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # The path must point to the folder containing index.html
          path: './dynamic-report'

      # 4. Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  sonar:
    runs-on: ${{ fromJSON(inputs.runnerLabel != '' && format('["self-hosted", "{0}"]', inputs.runnerLabel) || '["self-hosted"]') }}
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run SonarCloud Scan
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify sonar:sonar `
            "-DskipTests" `
            "-Dsonar.organization=mohanpalekar" `
            "-Dsonar.projectKey=qa-bdd-framework" `
            "-Dsonar.host.url=https://sonarcloud.io" `
            "-Dsonar.java.binaries=target/classes"
